{"version":3,"file":"AdminUserDetails-caYaZvh2.js","sources":["../../src/components/AdminUserDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { api } from \"../lib/api\";\nimport CreditScoreReport from './CreditScoreReport';\n\nconst Section = ({ title, children }) => (\n  <div className=\"mb-6\">\n    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">{title}</h3>\n    <div>{children}</div>\n  </div>\n);\n\nconst KeyValueTable = ({ data }) => (\n  <table className=\"min-w-full text-sm border mb-2\">\n    <tbody>\n      {Object.entries(data || {}).map(([key, value]) => (\n        <tr key={key} className=\"border-b align-top\">\n          <td className=\"px-2 py-1 border font-medium whitespace-nowrap\">{key}</td>\n          <td className=\"px-2 py-1 border\">\n            {typeof value === 'object' && value !== null ? (\n              <pre className=\"bg-gray-100 dark:bg-gray-900 rounded p-2 text-xs overflow-x-auto max-h-40\">{JSON.stringify(value, null, 2)}</pre>\n            ) : String(value)}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nconst ArrayTable = ({ data }) => (\n  <pre className=\"bg-gray-100 dark:bg-gray-900 rounded p-2 text-xs overflow-x-auto max-h-40\">{JSON.stringify(data, null, 2)}</pre>\n);\n\n// Helper for formatting dates\nconst formatDate = (date) => date ? new Date(date).toLocaleString() : '—';\n// Helper for formatting currency\nconst formatCurrency = (num) => typeof num === 'number' ? num.toLocaleString() : num || '—';\n// Helper for boolean display\nconst YesNo = ({ value }) => (\n  <span className={value ? 'text-green-600' : 'text-red-600'}>{value ? 'Yes' : 'No'}</span>\n);\n\n// Table for score factors\nconst ScoreFactorsTable = ({ factors }) => (\n  <table className=\"min-w-full text-xs border mb-2\">\n    <thead>\n      <tr className=\"bg-gray-100 dark:bg-gray-800\">\n        <th className=\"px-2 py-1 border\">Factor</th>\n        <th className=\"px-2 py-1 border\">Impact</th>\n      </tr>\n    </thead>\n    <tbody>\n      {(factors || []).map(f => (\n        <tr key={f._id || f.name}>\n          <td className=\"px-2 py-1 border\">{f.name}</td>\n          <td className=\"px-2 py-1 border\">\n            <span className={\n              f.impact === 'positive' ? 'text-green-600' :\n              f.impact === 'negative' ? 'text-red-600' : 'text-gray-600'\n            }>{f.impact}</span>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\n// Table for lending decision history\nconst LendingDecisionTable = ({ history }) => (\n  <table className=\"min-w-full text-xs border mb-2\">\n    <thead>\n      <tr className=\"bg-gray-100 dark:bg-gray-800\">\n        <th className=\"px-2 py-1 border\">Date</th>\n        <th className=\"px-2 py-1 border\">Decision</th>\n        <th className=\"px-2 py-1 border\">Max Loan</th>\n        <th className=\"px-2 py-1 border\">Reasons</th>\n      </tr>\n    </thead>\n    <tbody>\n      {(history || []).map((d, i) => (\n        <tr key={d._id || i}>\n          <td className=\"px-2 py-1 border\">{formatDate(d.evaluatedAt)}</td>\n          <td className=\"px-2 py-1 border\">{d.decision}</td>\n          <td className=\"px-2 py-1 border\">{formatCurrency(d.maxLoanAmount)}</td>\n          <td className=\"px-2 py-1 border\">{(d.reasons || []).join(', ')}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\n// Table for score history\nconst ScoreHistoryTable = ({ history }) => (\n  <table className=\"min-w-full text-xs border mb-2\">\n    <thead>\n      <tr className=\"bg-gray-100 dark:bg-gray-800\">\n        <th className=\"px-2 py-1 border\">Date</th>\n        <th className=\"px-2 py-1 border\">Score</th>\n        <th className=\"px-2 py-1 border\">Classification</th>\n      </tr>\n    </thead>\n    <tbody>\n      {(history || []).map((s, i) => (\n        <tr key={s._id || i}>\n          <td className=\"px-2 py-1 border\">{formatDate(s.date)}</td>\n          <td className=\"px-2 py-1 border\">{s.score}</td>\n          <td className=\"px-2 py-1 border\">{s.classification}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\n// Table for premium features\nconst PremiumFeaturesTable = ({ features }) => (\n  <table className=\"min-w-full text-xs border mb-2\">\n    <thead>\n      <tr className=\"bg-gray-100 dark:bg-gray-800\">\n        <th className=\"px-2 py-1 border\">Feature</th>\n        <th className=\"px-2 py-1 border\">Enabled</th>\n      </tr>\n    </thead>\n    <tbody>\n      {Object.entries(features || {}).map(([feature, enabled]) => (\n        <tr key={feature}>\n          <td className=\"px-2 py-1 border\">{feature.replace(/([A-Z])/g, ' $1')}</td>\n          <td className=\"px-2 py-1 border\"><YesNo value={enabled} /></td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nconst AdminUserDetails = ({ user, onClose, onUpdate, onDelete }) => {\n  const [editedUser, setEditedUser] = useState(user);\n  const [newFactor, setNewFactor] = useState({ name: '', impact: 'neutral', description: '' });\n  const [showRaw, setShowRaw] = useState(false);\n  const [activeTab, setActiveTab] = useState('details');\n  const [accessHistory, setAccessHistory] = useState([]);\n  const [accessLoading, setAccessLoading] = useState(false);\n  const [accessError, setAccessError] = useState(null);\n  const [filterUser, setFilterUser] = useState('');\n  const [filterAction, setFilterAction] = useState('');\n  const [filterDate, setFilterDate] = useState('');\n\n  // Fetch lender access history if user is a lender and tab is active\n  useEffect(() => {\n    if (user.role === 'lender' && activeTab === 'access') {\n      setAccessLoading(true);\n      setAccessError(null);\n      api.get(`/api/v1/users/lenders/${user._id}/access-history`)\n        .then(res => setAccessHistory(res.data.data || []))\n        .catch(err => setAccessError('Failed to load access history'))\n        .finally(() => setAccessLoading(false));\n    }\n  }, [user, activeTab]);\n\n  // Filtered access history\n  const filteredAccessHistory = accessHistory.filter(log => {\n    const matchesUser = filterUser ? (log.targetUserId?.toLowerCase?.().includes(filterUser.toLowerCase()) || log.targetUserId === filterUser) : true;\n    const matchesAction = filterAction ? log.action === filterAction : true;\n    const matchesDate = filterDate ? (log.timestamp && log.timestamp.startsWith(filterDate)) : true;\n    return matchesUser && matchesAction && matchesDate;\n  });\n\n  const handleScoreChange = (e) => {\n    const score = parseInt(e.target.value);\n    if (score >= 300 && score <= 850) {\n      setEditedUser({\n        ...editedUser,\n        creditScore: {\n          ...editedUser.creditScore,\n          score\n        }\n      });\n    }\n  };\n\n  const handleFactorAdd = () => {\n    if (newFactor.name && newFactor.description) {\n      setEditedUser({\n        ...editedUser,\n        creditScore: {\n          ...editedUser.creditScore,\n          factors: [...(editedUser.creditScore?.factors || []), newFactor]\n        }\n      });\n      setNewFactor({ name: '', impact: 'neutral', description: '' });\n    }\n  };\n\n  const handleFactorDelete = (index) => {\n    const newFactors = [...editedUser.creditScore.factors];\n    newFactors.splice(index, 1);\n    setEditedUser({\n      ...editedUser,\n      creditScore: {\n        ...editedUser.creditScore,\n        factors: newFactors\n      }\n    });\n  };\n\n  const handleSave = async () => {\n    try {\n      await api.patch(`/api/v1/admin/users/${user._id}`, editedUser);\n      onUpdate(editedUser);\n      alert('User data updated successfully');\n    } catch (error) {\n      alert('Failed to update user data');\n    }\n  };\n\n  // Helper to render a section if data exists\n  const renderSection = (title, data) => {\n    if (!data || (typeof data === 'object' && Object.keys(data).length === 0)) return null;\n    return <Section title={title}><KeyValueTable data={data} /></Section>;\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-white dark:bg-dark-card rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        <div className=\"p-6\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">User Details</h2>\n            <button\n              onClick={onClose}\n              className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            >\n              <span className=\"text-2xl\">×</span>\n            </button>\n          </div>\n\n          {/* Tabs */}\n          {user.role === 'lender' ? (\n            <div className=\"mb-6 flex space-x-4 border-b\">\n              <button\n                className={`pb-2 px-4 font-semibold ${activeTab === 'details' ? 'border-b-2 border-blue-600 text-blue-600' : 'text-gray-600'}`}\n                onClick={() => setActiveTab('details')}\n              >Details</button>\n              <button\n                className={`pb-2 px-4 font-semibold ${activeTab === 'access' ? 'border-b-2 border-blue-600 text-blue-600' : 'text-gray-600'}`}\n                onClick={() => setActiveTab('access')}\n              >Lender Access History</button>\n            </div>\n          ) : null}\n\n          {/* Details Tab */}\n          {(activeTab === 'details' || user.role !== 'lender') && (\n            <>\n              {/* Profile Section */}\n              {renderSection('Profile', {\n                name: user.name,\n                username: user.username,\n                email: user.email,\n                phoneNumber: user.phoneNumber,\n                nationalId: user.nationalId,\n                status: user.status,\n                emailVerified: user.emailVerified,\n                lastLogin: user.lastLogin,\n                createdAt: user.createdAt,\n                updatedAt: user.updatedAt,\n                ...user.profile\n              })}\n\n              {/* Financial Section */}\n              {renderSection('Financial', {\n                monthlyIncome: user.monthlyIncome,\n                monthlySavings: user.monthlySavings,\n                totalDebt: user.totalDebt,\n                bankBalance: user.bankBalance,\n                mobileMoneyBalance: user.mobileMoneyBalance\n              })}\n\n              {/* Credit Score Section */}\n              {user.creditScore && (\n                <Section title=\"Credit Score\">\n                  <div className=\"mb-2\">\n                    <b>FICO Score:</b> {user.creditScore.fico?.score} ({user.creditScore.fico?.version})<br />\n                    <b>Classification:</b> {user.creditScore.classification || '—'}<br />\n                    <b>Last Updated:</b> {formatDate(user.creditScore.fico?.lastUpdated)}\n                  </div>\n                  <ScoreFactorsTable factors={user.creditScore.factors} />\n                </Section>\n              )}\n\n              {/* Credit Report Section */}\n              {user.creditReport && (\n                <Section title=\"Credit Report\">\n                  <KeyValueTable data={{\n                    'Credit Utilization': user.creditReport.creditUtilization?.overall ? (user.creditReport.creditUtilization.overall * 100).toFixed(1) + '%': '—',\n                    'Credit Age (months)': user.creditReport.creditAgeMonths,\n                    'Credit Mix': user.creditReport.creditMix,\n                    'Open Accounts': user.creditReport.openAccounts,\n                    'Last Active Date': formatDate(user.creditReport.lastActiveDate),\n                    ...user.creditReport.personalInfo && { 'Personal Info': user.creditReport.personalInfo }\n                  }} />\n                  {user.creditReport.lendingDecisionHistory && (\n                    <div className=\"mt-2\">\n                      <div className=\"font-semibold mb-1\">Lending Decision History</div>\n                      <LendingDecisionTable history={user.creditReport.lendingDecisionHistory} />\n                    </div>\n                  )}\n                </Section>\n              )}\n\n              {/* Risk Factors Section */}\n              {user.creditReport && user.creditReport.riskFactors && (\n                <Section title=\"Risk Factors\">\n                  <ArrayTable data={user.creditReport.riskFactors} />\n                </Section>\n              )}\n\n              {/* Score History Section */}\n              {user.scoreHistory && user.scoreHistory.length > 0 && (\n                <Section title=\"Score History\">\n                  <ScoreHistoryTable history={user.scoreHistory} />\n                </Section>\n              )}\n\n              {/* Risk Flags Section */}\n              {user.riskFlags && user.riskFlags.length > 0 && (\n                <Section title=\"Risk Flags\">\n                  <ArrayTable data={user.riskFlags} />\n                </Section>\n              )}\n\n              {/* Premium Features Section */}\n              {user.premium && user.premium.features && (\n                <Section title=\"Premium Features\">\n                  <PremiumFeaturesTable features={user.premium.features} />\n                </Section>\n              )}\n\n              {/* Admin Fields */}\n              {user.adminFields && renderSection('Admin Fields', user.adminFields)}\n\n              {/* Legal Consent */}\n              {user.legalConsent && renderSection('Legal Consent', user.legalConsent)}\n\n              {/* Preferences */}\n              {user.preferences && renderSection('Preferences', user.preferences)}\n\n              {/* Metadata */}\n              {user.metadata && renderSection('Metadata', user.metadata)}\n            </>\n          )}\n\n          {/* Access History Tab */}\n          {user.role === 'lender' && activeTab === 'access' && (\n            <Section title=\"Lender Access History\">\n              <div className=\"mb-4 flex flex-wrap gap-2 items-center\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Filter by User ID\"\n                  value={filterUser}\n                  onChange={e => setFilterUser(e.target.value)}\n                  className=\"border px-2 py-1 rounded text-sm\"\n                />\n                <input\n                  type=\"date\"\n                  value={filterDate}\n                  onChange={e => setFilterDate(e.target.value)}\n                  className=\"border px-2 py-1 rounded text-sm\"\n                />\n                <select\n                  value={filterAction}\n                  onChange={e => setFilterAction(e.target.value)}\n                  className=\"border px-2 py-1 rounded text-sm\"\n                >\n                  <option value=\"\">All Actions</option>\n                  <option value=\"Credit report accessed\">Credit report accessed</option>\n                  <option value=\"User profile accessed\">User profile accessed</option>\n                </select>\n              </div>\n              {accessLoading ? (\n                <div>Loading...</div>\n              ) : accessError ? (\n                <div className=\"text-red-600\">{accessError}</div>\n              ) : (\n                <table className=\"min-w-full text-xs border\">\n                  <thead>\n                    <tr className=\"bg-gray-100 dark:bg-gray-800\">\n                      <th className=\"px-2 py-1 border\">Timestamp</th>\n                      <th className=\"px-2 py-1 border\">Action</th>\n                      <th className=\"px-2 py-1 border\">User ID</th>\n                      <th className=\"px-2 py-1 border\">IP</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {filteredAccessHistory.length === 0 ? (\n                      <tr><td colSpan={4} className=\"text-center py-2\">No access history found.</td></tr>\n                    ) : filteredAccessHistory.map((log, i) => (\n                      <tr key={log._id || i}>\n                        <td className=\"px-2 py-1 border\">{log.timestamp ? new Date(log.timestamp).toLocaleString() : ''}</td>\n                        <td className=\"px-2 py-1 border\">{log.action}</td>\n                        <td className=\"px-2 py-1 border\">{log.targetUserId}</td>\n                        <td className=\"px-2 py-1 border\">{log.ip}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              )}\n            </Section>\n          )}\n\n          {/* Raw Data Section */}\n          <div className=\"mb-6\">\n            <button\n              className=\"text-blue-600 underline text-sm mb-2\"\n              onClick={() => setShowRaw((v) => !v)}\n            >\n              {showRaw ? 'Hide Raw JSON' : 'Show Raw JSON'}\n            </button>\n            {showRaw && (\n              <pre className=\"bg-gray-100 dark:bg-gray-900 rounded p-2 text-xs overflow-x-auto max-h-96 border\">\n                {JSON.stringify(user, null, 2)}\n              </pre>\n            )}\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex justify-end space-x-4 mt-8\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400\"\n            >\n              Close\n            </button>\n            <button\n              onClick={() => {\n                if (window.confirm('Are you sure you want to delete this user?')) {\n                  onDelete(user._id);\n                }\n              }}\n              className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n            >\n              Delete User\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminUserDetails; "],"names":["Section","title","children","jsxs","jsx","KeyValueTable","data","key","value","ArrayTable","formatDate","date","formatCurrency","num","YesNo","ScoreFactorsTable","factors","f","LendingDecisionTable","history","d","i","ScoreHistoryTable","PremiumFeaturesTable","features","feature","enabled","AdminUserDetails","user","onClose","onUpdate","onDelete","editedUser","setEditedUser","useState","newFactor","setNewFactor","showRaw","setShowRaw","activeTab","setActiveTab","accessHistory","setAccessHistory","accessLoading","setAccessLoading","accessError","setAccessError","filterUser","setFilterUser","filterAction","setFilterAction","filterDate","setFilterDate","useEffect","api","res","err","filteredAccessHistory","log","matchesUser","_b","_a","matchesAction","matchesDate","renderSection","Fragment","_c","_d","e","v"],"mappings":"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"}