{"version":3,"file":"AnalyticsPanel-CBCwThv3.js","sources":["../../src/components/admin/AnalyticsPanel.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '../ui/card';\r\nimport { Table, TableHeader, TableRow, TableHead, TableBody, TableCell } from '../ui/table';\r\nimport { RefreshCw } from 'lucide-react';\r\nimport { Button } from '../ui/button';\r\n\r\nconst AnalyticsPanel = ({ analyticsData, loading, error, onRefresh }) => (\r\n  <Card className=\"border border-[#1a4a38]\">\r\n    <CardHeader>\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\">\r\n        <div>\r\n          <CardTitle className=\"text-gray-900 dark:text-white\">Analytics Dashboard</CardTitle>\r\n          <CardDescription className=\"text-gray-600 dark:text-[#a8d5ba]\">\r\n            Comprehensive insights into credit performance\r\n          </CardDescription>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={onRefresh}\r\n            className=\"border-[#2196f3] text-[#2196f3] hover:bg-[#f0f7f4] dark:hover:bg-[#1a4a38]\"\r\n            disabled={loading}\r\n          >\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </CardHeader>\r\n    <CardContent>\r\n      {loading ? (\r\n        <div className=\"flex flex-col items-center justify-center min-h-[200px]\">\r\n          <div className=\"animate-spin h-12 w-12 border-t-4 border-b-4 border-[#2196f3] rounded-full mb-4\"></div>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading analytics...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"bg-red-50 dark:bg-red-900/20 p-4 rounded-lg mb-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <span className=\"text-red-600 font-bold\">Error:</span>\r\n            <span className=\"text-red-700 dark:text-red-300\">{error}</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n            <div className=\"border border-[#1a4a38] rounded-lg p-4\">\r\n              <h3 className=\"font-semibold mb-4\">Score Distribution</h3>\r\n              <div className=\"bg-gray-100 dark:bg-[#1a4a38] h-64 rounded-lg flex items-center justify-center\">\r\n                <span className=\"text-gray-500\">Score distribution chart visualization</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"border border-[#1a4a38] rounded-lg p-4\">\r\n              <h3 className=\"font-semibold mb-4\">Approval Rate Trends</h3>\r\n              <div className=\"bg-gray-100 dark:bg-[#1a4a38] h-64 rounded-lg flex items-center justify-center\">\r\n                <span className=\"text-gray-500\">Approval rate trend chart visualization</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            <Card className=\"border border-[#1a4a38]\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-lg\">Rejection Reasons</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {analyticsData.rejectionReasons ? Object.entries(analyticsData.rejectionReasons).map(([reason, percentage], index) => (\r\n                    <div key={reason}>\r\n                      <div className=\"flex justify-between mb-1\">\r\n                        <span>{reason}</span>\r\n                        <span>{percentage}%</span>\r\n                      </div>\r\n                      <div className=\"h-2 bg-gray-200 rounded-full\">\r\n                        <div \r\n                          className=\"h-2 rounded-full\" \r\n                          style={{ \r\n                            width: `${percentage}%`,\r\n                            backgroundColor: ['#f44336', '#ff9800', '#ffc107', '#4caf50', '#2196f3'][index % 5]\r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                  )) : (\r\n                    <div className=\"text-center text-gray-500 py-8\">\r\n                      <RefreshCw className=\"h-8 w-8 mx-auto mb-2 animate-spin\" />\r\n                      Loading rejection data...\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n            <Card className=\"border border-[#1a4a38]\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-lg\">Score by Region</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>Region</TableHead>\r\n                      <TableHead className=\"text-right\">Avg. Score</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {analyticsData.regionalScores ? Object.entries(analyticsData.regionalScores).map(([region, score]) => (\r\n                      <TableRow key={region}>\r\n                        <TableCell>{region}</TableCell>\r\n                        <TableCell className=\"text-right\">{score}</TableCell>\r\n                      </TableRow>\r\n                    )) : (\r\n                      <TableRow>\r\n                        <TableCell colSpan={2} className=\"text-center text-gray-500 py-4\">\r\n                          <RefreshCw className=\"h-6 w-6 mx-auto mb-2 animate-spin\" />\r\n                          Loading regional data...\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </CardContent>\r\n            </Card>\r\n            <Card className=\"border border-[#1a4a38]\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-lg\">Score by Occupation</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>Occupation</TableHead>\r\n                      <TableHead className=\"text-right\">Avg. Score</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {analyticsData.occupationScores ? Object.entries(analyticsData.occupationScores).map(([occupation, score]) => (\r\n                      <TableRow key={occupation}>\r\n                        <TableCell>{occupation}</TableCell>\r\n                        <TableCell className=\"text-right\">{score}</TableCell>\r\n                      </TableRow>\r\n                    )) : (\r\n                      <TableRow>\r\n                        <TableCell colSpan={2} className=\"text-center text-gray-500 py-4\">\r\n                          <RefreshCw className=\"h-6 w-6 mx-auto mb-2 animate-spin\" />\r\n                          Loading occupation data...\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </>\r\n      )}\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default AnalyticsPanel; "],"names":["AnalyticsPanel","analyticsData","loading","error","onRefresh","jsxs","Card","jsx","CardHeader","CardTitle","CardDescription","Button","CardContent","Fragment","reason","percentage","index","RefreshCw","Table","TableHeader","TableRow","TableHead","TableBody","region","score","TableCell","occupation"],"mappings":"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"}